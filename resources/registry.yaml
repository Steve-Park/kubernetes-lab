apiVersion: v1
kind: Namespace
metadata:
  name:  kube-registry
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: registry-storage
  namespace: kube-registry
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /data/registry
    server: storage
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-storage
  namespace: kube-registry
spec:
  storageClassName: manual
  volumeName: registry-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-server-config
  namespace: kube-registry
data:
  config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
      delete:
        enabled: true
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
        # Access-Control-Allow-Origin: ['http://127.0.0.1:8000']
        Access-Control-Allow-Origin: ['*']
        Access-Control-Allow-Methods: ['HEAD', 'GET', 'OPTIONS', 'DELETE']
        Access-Control-Allow-Headers: ['Authorization', 'Accept', 'Cache-Control']
        Access-Control-Max-Age: [1728000]
        # Access-Control-Allow-Credentials: [true]
        Access-Control-Expose-Headers: ['Docker-Content-Digest']
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-ui-config
  namespace: kube-registry
data:
  SINGLE_REGISTRY: "true"
  REGISTRY_TITLE: "Docker Registry UI"
  DELETE_IMAGES: "true"
  SHOW_CONTENT_DIGEST: "true"
  NGINX_PROXY_PASS_URL: "http://docker-registry:5000"
  SHOW_CATALOG_NB_TAGS: "true"
  CATALOG_MIN_BRANCHES: "1"
  CATALOG_MAX_BRANCHES: "1"
  TAGLIST_PAGE_SIZE: "100"
  REGISTRY_SECURED: "false"
  CATALOG_ELEMENTS_LIMIT: "1000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: kube-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: registry-server
        image: registry:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "64Mi"
            cpu: "500m"
        ports:
        - containerPort: 5000
        volumeMounts:
          - name: registry-config
            mountPath: /etc/docker/registry/config.yml
            subPath: config.yml
            readOnly: true 
          - name:  registry-storage
            mountPath:  /var/lib/registry
      - name: registry-ui
        image: joxit/docker-registry-ui:main
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "200Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        envFrom:
          - configMapRef:
              name: registry-ui-config
      volumes:
        - name: registry-config
          configMap:
            name: registry-server-config
        - name:  registry-storage
          persistentVolumeClaim:
            claimName: registry-storage
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: kube-registry
spec:
  selector:
    app: docker-registry
  type: LoadBalancer
  ports:
  - name: registry-server
    protocol: TCP
    port: 5000
    targetPort: 5000
  - name: registry-ui
    protocol: TCP
    port: 80
    targetPort: 80